home: &home_path /home/sei/tetrahedron_pair_ML # all other paths are relative to home

artifacts_config:
  save_artifacts_to: artifacts 

processor_config:
  skip_processing: true
  dataset_paths:
    raw_data: data/raw          
    processed_data: &processed_data_path data/processed

  num_train_samples: 1000
  num_val_samples: 1000

  volume_scale_factor: &volume_scale_factor 1000000

  intersection_distributions:
    # Note: Percentages are approximate and should sum to ~100%. 
    no_intersection: 50
    point_intersection: 5
    segment_intersection: 7
    polygon_intersection: 20
    polyhedron_intersection: 18

  volume_range: [0.00000016667,0.0166666667] 
  number_of_bins: 100

  augmentations: &augmentations_config
    point_wise_permutation_augmentation_pct: 0
    tetrahedron_wise_permutation_augmentation_pct: 0
    x_sorting:
      spatial_based: null
      volume_based: null
    y_sorting:
      difficulty_based: null
  transformations: &transformations_config [] # null, affine_linear_transformation, rigid_transformation

model_config:
  skip_building: false
  processed_data_path: *processed_data_path
  task: &task_type IntersectionStatus_IntersectionVolume # IntersectionStatus_IntersectionVolume, IntersectionStatus, IntersectionVolume
  
  architecture:
    use_model: tetrahedronpairnet
    mlp:
      shared_layers: [ 128]
      classification_head: [128, 128, 1]
      regression_head: [128, 128, 1]

    tetrahedronpairnet:
      classification_head: [64, 64, 1]
      per_tetrahedron_layers: [24, 24]
      per_two_tetrahedra_layers: [24, 24]
      per_vertex_layers: [24, 24]
      regression_head: [64, 64, 1]
      shared_layers: [128]
      tetrahedra_aggregation_function: max # max, mean, sum, min, hadamard_prod
      vertices_aggregation_function: max

  use_model: tetrahedronpairnet
  common_parameters:
    activation_function: relu
    dropout_rate: 0.1
    task: *task_type
    volume_scale_factor: *volume_scale_factor
  

trainer_config:
  skip_training: false
  processed_data_path: data/processed
  
  fine_tune_data_path: /home/sei/tetrahedron_pair_ML/data/raw/scenes/scene1_two_random_tetrahedra_colliding.csv
  fine_tune_model_path: /home/sei/tetrahedron_pair_ML/artifacts/id0605203440_tetrahedronpairnet_IntersectionStatus_IntersectionVolume_1000000-train_10000-val_vol-0-0.02_epochs-20_adamw-0.001_distributions-no_intersection-43_point_intersection-3_segment_intersection-5_polygon_intersection-22_polyhedron_intersection-27/model.pt
  fine_tune_on: false

  batch_size: 32
  epochs: 20
  
  learning_rate: 0.001
  optimizer: adamw # adam, adamw, sgd
  loss_function: *task_type
  

evaluator_config:
  skip_evaluation: false
  model_path: /home/sei/tetrahedron_pair_ML/artifacts/id-20250408-065815_deepset_regression_100000-train_100000-val_vol-0-0.01_epochs-5_adamw-0.001_distributions-polyhedron_intersection-100/model.pt
  task: *task_type
  test_data_path: src/evaluator/test_data 
  augmentations: *augmentations_config
  transformations: *transformations_config
  regression_consistency_thresholds:
    atol: 0.0001
    rtol: 0.1
  volume_range: [0, 0.01666666667] # [min_volume, max_volume]
  evaluation_n_bins: 10
